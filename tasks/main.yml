---
- name: Clone Certbot | git
  git:
    repo: https://github.com/certbot/certbot.git
    dest: "{{ certbot_source }}"

- name: does certificate exist
  shell: "if [ -f {{ certbot_certificate_path }} ]; then echo yes; else echo no; fi"
  register: certbot_certificate_exists

- name: get how long the current certificate is valid for
  shell: "echo $(($(date --date=\"$(cat {{ certbot_certificate_path }} | openssl x509 -noout -enddate 2>/dev/null | awk -F\\= '{print $2}')\" +%s)-$(date +%s)))"
  register: certbot_expires_in
  when: certbot_certificate_exists.stdout | bool

- name: request signed certificate
  sudo: no
  shell: "{{ certbot_source }}/certbot-auto certonly --standalone --non-interactive {% if certbot_keep_until_expiring %} --keep-until-expiring {% endif %} {% if certbot_agree_tos %} --agree-tos {% endif %} {% if certbot_email %} --email {{ certbot_email }} {% endif %} -d {{ certbot_domain }}"
  when: (not certbot_certificate_exists.stdout | bool or certbot_expires_in.stdout is defined and certbot_expires_in.stdout | int < 2592000) and not certbot_dry_run

- name: request signed certificate | DRY RUN
  debug:
    msg: "SIGNING CERTIFICATE DRY RUN"
  when: certbot_dry_run

- name: create /data/www if does not exist
  file:
    path: "{{ certbot_path }}"
    state: directory
    owner: "{{ certbot_owner }}"
    group: "{{ certbot_group }}"
    mode: 0755

- name: read in public data
  shell: "cat /etc/letsencrypt/live/{{ certbot_domain }}/fullchain.pem"
  register: certbot_public_key

- name: read in private key data
  shell: "cat /etc/letsencrypt/live/{{ certbot_domain }}/privkey.pem"
  register: certbot_private_key

- name: write combined ssl file
  template:
    src: data/www/ssl.combined
    dest: "{{ certbot_path_combined }}"
    owner: "{{ certbot_owner }}"
    group: "{{ certbot_group }}"
    mode: 0400
  when: certbot_combined

- name: write ssl certificate file
  template:
    src: data/www/ssl.crt
    dest: "{{ certbot_path_public }}"
    owner: "{{ certbot_owner }}"
    group: "{{ certbot_group }}"
    mode: 0440
  when: not certbot_combined

- name: write ssl private key file
  template:
    src: data/www/ssl.key
    dest: "{{ certbot_path_private }}"
    owner: "{{ certbot_owner }}"
    group: "{{ certbot_group }}"
    mode: 0440
  when: not certbot_combined

- name: add cronjob to run certbot renewal
  cron: 
    name: run certbot renewal script daily
    minute: 0
    hour: 19
    job: "{{ certbot_source }}/certbot renew --pre-hook 'service {{ certbot_web_server }} stop' --post-hook 'service {{ certbot_web_server }} start' --webroot -w {{ certbot_path }} -d {{ certbot_domain }}"
    user: root
